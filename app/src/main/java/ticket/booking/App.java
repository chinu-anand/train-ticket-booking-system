/*
 * This source file was generated by the Gradle 'init' task
 */
package ticket.booking;

import ticket.booking.entities.Ticket;
import ticket.booking.entities.Train;
import ticket.booking.entities.User;
import ticket.booking.services.TrainService;
import ticket.booking.services.UserBookingService;
import ticket.booking.utils.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {
    public static void main(String[] args) {
        System.out.println("Running Train Ticket Booking System");
        Scanner scanner = new Scanner(System.in);

        int option = -1;
        boolean isLoggedIn = false;

        UserBookingService userBookingService;
        TrainService trainService;
        try{
            userBookingService = new UserBookingService();
            trainService = new TrainService();
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(Arrays.toString(e.getStackTrace()));
            System.out.println("Unable to initialize the service");
            return;
        }

        while(option != 0){
            if(!isLoggedIn){
                System.out.println("Choose an option");
                System.out.println();
                System.out.println("1. Sign Up");
                System.out.println("2. Login");
                System.out.println("0. Exit");
                System.out.println();
                System.out.println("Enter Your Choice: ");
            } else {
                System.out.println();
                System.out.println("Choose an option");
                System.out.println();
                System.out.println("3. Fetch Bookings");
                System.out.println("4. Search Trains");
                System.out.println("5. Book a Seat");
                System.out.println("6. Cancel My Booking");
                System.out.println("0. Exit");
                System.out.println();
                System.out.println("Enter Your Choice: ");
            }


            option = scanner.nextInt();

            switch (option){
                case 1:
                    System.out.println("Enter Your Name");
                    String nameToSignup = scanner.next();
                    System.out.println("Enter a Password");
                    String passwordToSignUp = scanner.next();

                    User userToSignUp = new User(
                            UUID.randomUUID().toString(),
                            nameToSignup,
                            passwordToSignUp,
                            UserServiceUtil.hashPassword(passwordToSignUp),
                            new ArrayList<>()
                    );
                    userBookingService.signUp(userToSignUp);
                    break;

                case 2:
                    System.out.println("Enter Your Name");
                    String nameToLogin = scanner.next();
                    System.out.println("Enter a Password");
                    String passwordToLogin = scanner.next();

                    boolean res = userBookingService.loginUser(nameToLogin, passwordToLogin);
                    if(res){
                        System.out.println("Logged In Successfully");
                        isLoggedIn = true;
                    }else{
                        System.out.println("Invalid Name or Password");
                    }

                    break;

                case 3:
                    if(userBookingService.getUser() != null){
                        userBookingService.fetchBookings();
                    }

                    break;

                case 4:
                    System.out.println("From : ");
                    String fromStation = scanner.next();
                    System.out.println("To : ");
                    String toStation = scanner.next();

                    List<Train> trains = trainService.searchTrains(fromStation, toStation);
                    if(trains.isEmpty()){
                        System.out.println("No Trains Found");
                    }else{
                        for(Train t: trains){
                            System.out.println(t.getTrainInfo());
                        }
                    }

                    break;
                case 5:
                    System.out.println("From : ");
                    String from = scanner.next();
                    System.out.println("To : ");
                    String to = scanner.next();

                    List<Train> trainsList = trainService.searchTrains(from, to);
                    if(trainsList.isEmpty()){
                        System.out.println("No Trains Found");
                    }else{
                        for(Train t: trainsList){
                            System.out.println(t.getTrainInfo());
                        }
                    }

                    System.out.println("Choose which train : ");
                    int trainIndex = scanner.nextInt();

                    int seat = trainService.isSeatAvailable(trainsList.get(trainIndex-1));
                    if(seat==-1) continue;

                    try {
                        userBookingService.bookTicket(trainsList.get(trainIndex-1), from, to);
                        System.out.println("Ticket Booked Successfully");
                    } catch (IOException e){
                        System.out.println("Ticket Booking Error");
                    }

                    break;
                case 6:
                    List<Ticket> ticketList = userBookingService.getTickets();
                    for(Ticket t: ticketList){
                        System.out.println(t.getTicketInfo());
                    }

                    System.out.println();
                    System.out.println("Which ticket to cancel ?");
                    int index = scanner.nextInt();

                    try {
                        userBookingService.cancelBooking(ticketList.get(index-1).getTicketId());
                    } catch (IOException e){
                        System.out.println("Error in cancelling ticket");
                    }
                    break;
            }
        }
    }
}
